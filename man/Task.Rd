% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-Task.R
\name{Task}
\alias{Task}
\title{Get Group data}
\description{
Get Group data

Get Group data
}
\details{
R6 class that allows to get the Group information.
}
\section{Super classes}{
\code{\link[reportesAPI:DBManager]{reportesAPI::DBManager}} -> \code{\link[reportesAPI:User]{reportesAPI::User}} -> \code{\link[reportesAPI:Organisation]{reportesAPI::Organisation}} -> \code{\link[reportesAPI:Group]{reportesAPI::Group}} -> \code{Task}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{tasks}}{List containing the tasks an User can interact with}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Task-new}{\code{Task$new()}}
\item \href{#method-Task-task_add}{\code{Task$task_add()}}
\item \href{#method-Task-task_delete}{\code{Task$task_delete()}}
\item \href{#method-Task-task_report_progress}{\code{Task$task_report_progress()}}
\item \href{#method-Task-task_edit_metadata}{\code{Task$task_edit_metadata()}}
\item \href{#method-Task-progress_add}{\code{Task$progress_add()}}
\item \href{#method-Task-task_get_history}{\code{Task$task_get_history()}}
\item \href{#method-Task-clone}{\code{Task$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="DBManager" data-id="db_execute_statement"><a href='../../reportesAPI/html/DBManager.html#method-DBManager-db_execute_statement'><code>reportesAPI::DBManager$db_execute_statement()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="DBManager" data-id="db_get_query"><a href='../../reportesAPI/html/DBManager.html#method-DBManager-db_get_query'><code>reportesAPI::DBManager$db_get_query()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="DBManager" data-id="db_make_query"><a href='../../reportesAPI/html/DBManager.html#method-DBManager-db_make_query'><code>reportesAPI::DBManager$db_make_query()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="DBManager" data-id="get_timestamp"><a href='../../reportesAPI/html/DBManager.html#method-DBManager-get_timestamp'><code>reportesAPI::DBManager$get_timestamp()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="User" data-id="user_edit_names"><a href='../../reportesAPI/html/User.html#method-User-user_edit_names'><code>reportesAPI::User$user_edit_names()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Organisation" data-id="org_edit"><a href='../../reportesAPI/html/Organisation.html#method-Organisation-org_edit'><code>reportesAPI::Organisation$org_edit()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Organisation" data-id="org_finalize"><a href='../../reportesAPI/html/Organisation.html#method-Organisation-org_finalize'><code>reportesAPI::Organisation$org_finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Organisation" data-id="org_initialize"><a href='../../reportesAPI/html/Organisation.html#method-Organisation-org_initialize'><code>reportesAPI::Organisation$org_initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Organisation" data-id="org_user_add"><a href='../../reportesAPI/html/Organisation.html#method-Organisation-org_user_add'><code>reportesAPI::Organisation$org_user_add()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Organisation" data-id="org_user_delete"><a href='../../reportesAPI/html/Organisation.html#method-Organisation-org_user_delete'><code>reportesAPI::Organisation$org_user_delete()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Organisation" data-id="org_user_edit"><a href='../../reportesAPI/html/Organisation.html#method-Organisation-org_user_edit'><code>reportesAPI::Organisation$org_user_edit()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Group" data-id="group_edit"><a href='../../reportesAPI/html/Group.html#method-Group-group_edit'><code>reportesAPI::Group$group_edit()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Group" data-id="group_finalize"><a href='../../reportesAPI/html/Group.html#method-Group-group_finalize'><code>reportesAPI::Group$group_finalize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Group" data-id="group_initialize"><a href='../../reportesAPI/html/Group.html#method-Group-group_initialize'><code>reportesAPI::Group$group_initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Group" data-id="group_select"><a href='../../reportesAPI/html/Group.html#method-Group-group_select'><code>reportesAPI::Group$group_select()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Group" data-id="group_unit_add"><a href='../../reportesAPI/html/Group.html#method-Group-group_unit_add'><code>reportesAPI::Group$group_unit_add()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Group" data-id="group_unit_delete"><a href='../../reportesAPI/html/Group.html#method-Group-group_unit_delete'><code>reportesAPI::Group$group_unit_delete()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Group" data-id="group_unit_edit"><a href='../../reportesAPI/html/Group.html#method-Group-group_unit_edit'><code>reportesAPI::Group$group_unit_edit()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Group" data-id="group_user_add"><a href='../../reportesAPI/html/Group.html#method-Group-group_user_add'><code>reportesAPI::Group$group_user_add()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Group" data-id="group_user_delete"><a href='../../reportesAPI/html/Group.html#method-Group-group_user_delete'><code>reportesAPI::Group$group_user_delete()</code></a></span></li>
<li><span class="pkg-link" data-pkg="reportesAPI" data-topic="Group" data-id="group_user_edit"><a href='../../reportesAPI/html/Group.html#method-Group-group_user_edit'><code>reportesAPI::Group$group_user_edit()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-new"></a>}}
\if{latex}{\out{\hypertarget{method-Task-new}{}}}
\subsection{Method \code{new()}}{
Start a Task based on an user email
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$new(email)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{email}}{The email the user started the session with.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-task_add"></a>}}
\if{latex}{\out{\hypertarget{method-Task-task_add}{}}}
\subsection{Method \code{task_add()}}{
Add a new task for an User
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$task_add(
  process_id = NA_character_,
  activity_id = NA_character_,
  org_id,
  group_id,
  task_title,
  task_description,
  assignee,
  time_due,
  output_unit,
  output_goal
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{process_id}}{The id of the process the task belongs to. When used must be paired with activity_id}

\item{\code{activity_id}}{The id of the activity the task belongs to. When used must be paired with process_id}

\item{\code{org_id}}{The id of the organisation on which the statement will be executed}

\item{\code{group_id}}{The id of the group on which the statement will be executed}

\item{\code{task_title}}{The new title of the group}

\item{\code{task_description}}{The new description of the group}

\item{\code{assignee}}{The id of the user responsible for the task}

\item{\code{time_due}}{Deadline for the task completion. Datetime}

\item{\code{output_unit}}{Unit of measurement of the task output}

\item{\code{output_goal}}{Number on which which the output will be measured}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-task_delete"></a>}}
\if{latex}{\out{\hypertarget{method-Task-task_delete}{}}}
\subsection{Method \code{task_delete()}}{
Delete an user task
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$task_delete(
  process_id = NA_character_,
  activity_id = NA_character_,
  org_id,
  group_id,
  task_id
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{process_id}}{The id of the process the task belongs to. When used must be paired with activity_id}

\item{\code{activity_id}}{The id of the activity the task belongs to. When used must be paired with process_id}

\item{\code{org_id}}{The id of the organisation on which the statement will be executed}

\item{\code{group_id}}{The id of the group on which the statement will be executed}

\item{\code{task_id}}{The id of the task on which the statement will be executed}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-task_report_progress"></a>}}
\if{latex}{\out{\hypertarget{method-Task-task_report_progress}{}}}
\subsection{Method \code{task_report_progress()}}{
Report progress on an assigned task
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$task_report_progress(
  process_id = NA_character_,
  activity_id = NA_character_,
  org_id,
  group_id,
  task_id,
  status_current,
  output_current,
  details
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{process_id}}{The id of the process the task belongs to. When used must be paired with activity_id}

\item{\code{activity_id}}{The id of the activity the task belongs to. When used must be paired with process_id}

\item{\code{org_id}}{The id of the organisation on which the statement will be executed}

\item{\code{group_id}}{The id of the group on which the statement will be executed}

\item{\code{task_id}}{The id of the task on which the statement will be executed}

\item{\code{status_current}}{Current status of the specified task}

\item{\code{output_current}}{Current output of the specified task}

\item{\code{details}}{Explanation of the progress made}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-task_edit_metadata"></a>}}
\if{latex}{\out{\hypertarget{method-Task-task_edit_metadata}{}}}
\subsection{Method \code{task_edit_metadata()}}{
Edit a task metadata
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$task_edit_metadata(
  process_id = NA_character_,
  activity_id = NA_character_,
  org_id,
  group_id,
  task_id,
  task_title,
  task_description
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{process_id}}{The id of the process the task belongs to. When used must be paired with activity_id}

\item{\code{activity_id}}{The id of the activity the task belongs to. When used must be paired with process_id}

\item{\code{org_id}}{The id of the organisation on which the statement will be executed}

\item{\code{group_id}}{The id of the group on which the statement will be executed}

\item{\code{task_id}}{The id of the task on which the statement will be executed}

\item{\code{task_title}}{The new title of the group}

\item{\code{task_description}}{The new description of the group}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-progress_add"></a>}}
\if{latex}{\out{\hypertarget{method-Task-progress_add}{}}}
\subsection{Method \code{progress_add()}}{
Insert progress info on some task
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$progress_add(
  process_id = NA_character_,
  activity_id = NA_character_,
  org_id,
  group_id,
  task_id,
  output_progress,
  status,
  details
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{process_id}}{The id of the process the task belongs to. When used must be paired with activity_id}

\item{\code{activity_id}}{The id of the activity the task belongs to. When used must be paired with process_id}

\item{\code{org_id}}{The id of the organisation on which the statement will be executed}

\item{\code{group_id}}{The id of the group on which the statement will be executed}

\item{\code{task_id}}{The id of the task on which the statement will be executed}

\item{\code{output_progress}}{Quantity of the progress being reported. Is measured in the unit specified in the creation of the task}

\item{\code{status}}{The status of the task once the new progress is added}

\item{\code{details}}{Explanation of the progress made}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-task_get_history"></a>}}
\if{latex}{\out{\hypertarget{method-Task-task_get_history}{}}}
\subsection{Method \code{task_get_history()}}{
Get a task's progression history
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$task_get_history(task_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{task_id}}{The id of the task on which the statement will be executed}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Task-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Task-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Task$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
